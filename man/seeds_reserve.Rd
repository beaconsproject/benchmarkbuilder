% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/builder.R
\name{seeds_reserve}
\alias{seeds_reserve}
\title{Create a reserves seeds table.}
\usage{
seeds_reserve(
  catchments_sf,
  reserve_polygons,
  name_col,
  areatarget_col,
  filter_intactness_col = NULL,
  filter_intactness_threshold = NULL
)
}
\arguments{
\item{catchments_sf}{sf object of the catchments dataset with unique identifier column: CATCHNUM.}

\item{reserve_polygons}{sf object of reserves used to select reserve seed catchments.}

\item{name_col}{Name of column in \code{reserve_polygons} holding unique reserve names.}

\item{areatarget_col}{Name of column in \code{reserve_polygons} holding area target in m2 for each reserve.}

\item{filter_intactness_col}{Optional intactness column in \code{catchments_sf} to filter on.}

\item{filter_intactness_threshold}{If \code{filter_intactness_col} provided, the minimum intactness value to filter on.}
}
\value{
A long tibble of seed catchments and their area targets grouped by reserve names.
}
\description{
The reserves seeds table is an input to BUILDER that lists seed catchments and area targets for a set of reserves.
Reserve seed catchments are aggregations of catchments to be built into benchmarks. Typically an aggregation represents
and existing protected area. This function takes a polygon labelled with area target values and extracts the intersecting catchments
to create the reserve seeds table. Reserve seeds can optionally be filtered by their intactness values.
}
\details{
\subsection{Aggregating reserve catchments}{

A list of seed catchments for each reserve in \code{reserve_polygons} is selected based on their centroid (more specifically,
\code{sf::st_point_on_surface()}) falling inside the reserve. Reserve names are pulled from the \code{name_col} and area
targets from the \code{areatarget_col}.
}

\subsection{Filtering}{

If \code{filter_intactness_col} and \code{filter_intactness_threshold} are provided, catchments will be filtered to include those
with an intactness value >= the threshold. If no filter arguments are provided, all aggregated catchments in the reserve will be
added to the seeds table.
}

\subsection{Area targets}{

Area targets should be provided in m2 in a \code{areatarget_col} in the \code{reserve_polygons}.
}

\subsection{Passing to builder()}{

The BUILDER software requires reserve seeds in a wide format csv or txt table. The output of \code{seeds_reserve()} can be converted
to the wide format using \code{reserve_seeds_to_builder()}. This is done automatically by \code{builder_reserve()}.
}
}
\examples{
existing_reserves_sample$areatarget_m2 <- 100000000
seeds_reserve(catchments_sample, existing_reserves_sample, "reserve", "areatarget_m2")
seeds_reserve(catchments_sample, existing_reserves_sample, "reserve", "areatarget_m2", "intact", 1)

# Save as wide format required by BUILDER and save
seeds_reserve_wide <-
  reserve_seeds_to_builder(
    seeds_reserve(catchments_sample, existing_reserves_sample, "reserve", "areatarget_m2")
    )
#write.csv(seeds_reserve_wide, "reserve_seeds.csv", quote = FALSE, row.names = FALSE)
}
