% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/builder.R
\name{builder}
\alias{builder}
\title{Call the BUILDER software from R.}
\usage{
builder(
  catchments_sf,
  seeds,
  neighbours,
  out_dir = NULL,
  catchment_level_intactness = 1,
  benchmark_level_intactness = 1,
  area_target_proportion = 1,
  area_type = "land",
  construct_benchmarks = TRUE,
  area_target_multiplier = 1,
  handle_isolated_catchments = TRUE,
  output_upstream = FALSE,
  output_downstream = FALSE,
  output_hydrology_metrics = FALSE,
  area_land = "Area_Land",
  area_water = "Area_Water",
  skeluid = "SKELUID",
  catchnum = "CATCHNUM",
  subzone = "FDAHUC8",
  zone = "ZONE",
  basin = "BASIN",
  order1 = "ORDER1",
  order2 = "ORDER2",
  order3 = "ORDER3",
  stream_length = "STRMLEN",
  intactness = "intact",
  isolated = "Isolated",
  benchmark_identifier = "PB",
  handler_summary = FALSE,
  benchmark_level_intactness_props = "\\"\\"",
  area_target_props = "\\"\\""
)
}
\arguments{
\item{catchments_sf}{sf object of the catchments dataset with unique identifier column: CATCHNUM.}

\item{seeds}{Seeds table from \code{seeds()} listing seed catchments and area targets.}

\item{neighbours}{Neighbours table from \code{neighbours()} listing all neighbouring pairs of catchments.}

\item{out_dir}{If provided, input seeds, neighbours and catchments files, and output BUILDER tables will be saved to this directory. Otherwise
a temp directory will be used.}

\item{catchment_level_intactness}{Minimum intactness value for catchment inclusion (between 0-1). i.e. if value of 1 is used, only 100\% intact
catchments will be used to build benchmarks.}

\item{benchmark_level_intactness}{Minimum area-weighted intactness of final benchmarks. Only benchmarks meeting this value will be returned.}

\item{area_target_props}{}
}
\value{
xxx
}
\description{
Prepares and passes all input tables and variables to the BUIDLER executable and returns the benchmark table to R.
}
\details{
This function prepares the input tables (neighbours, seeds, catchments) required by BUILDER in a temp file, then creates
a string of parameters that is passed to the BUILDER executable using \code{system()}. The BUILDER output tables are saved to the
temp file, and the output table listing benchmark names and catchment lists is returned to the R session.

If users want access to the complete set of BUILDER output tables, a valid output directory can be provided in which case all input
and output tables will be saved to the directory. If no output directory is provided a temp folder will be used and deleted after
the function completes. An output directory might be useful in a looped analysis with multiple calls to BUILDER producing multiple
sets of output files. In this workflow a different output directory can be used to save each set of output files which can later be
processed using the \code{beaconstools} package.

The \code{builder()} function calls BUILDER in 'catchment' mode where each seed is an individual catchment that will be built into a
benchmark. See \code{builder_reserve()} for calling BUILDER in 'reserve' mode.

The main parameters to adjust when building benchmarks are:
\describe{
\item{Area target}{Set in the seeds table, this defines the minimum size for the benchmark.}
\item{Catchment-level intactness}{Only catchments with intactness values greater than this value will be added to the benchmark.}
\item{Benchmark-level intactness}{Function will only return benchmarks with an area-weighted intacntess greater than or equal to
this value.}
\item{Area-target multiplier}{The proportion of the Area target that benchmark need to meet. Allows output of benchmarks smaller than
the area target.}
}
}
\examples{
xxx
}
